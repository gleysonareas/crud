{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/product/product-create/product-create.component.ts","webpack:///src/app/components/product/product-create/product-create.component.html","webpack:///src/app/components/product/product-crud/product-crud.component.ts","webpack:///src/app/components/product/product-crud/product-crud.component.html","webpack:///src/app/components/product/product-read/product-read.component.ts","webpack:///src/app/components/product/product-read/product-read.component.html","webpack:///src/app/components/product/product-update/product-update.component.ts","webpack:///src/app/components/product/product-update/product-update.component.html","webpack:///src/app/components/template/footer/footer.component.ts","webpack:///src/app/components/template/footer/footer.component.html","webpack:///src/app/components/template/header/header.component.ts","webpack:///src/app/components/template/header/header.component.html","webpack:///src/app/components/template/nav/nav.component.ts","webpack:///src/app/components/template/nav/nav.component.html","webpack:///src/app/core/services/product.service.ts","webpack:///src/app/directives/for.directive.ts","webpack:///src/app/directives/red.directive.ts","webpack:///src/app/shared/material/material.module.ts","webpack:///src/app/views/home/home.component.ts","webpack:///src/app/views/home/home.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","provide","useValue","declarations","providers","bootstrap","ProductCreateComponent","productService","router","product","name","price","create","subscribe","showMessage","navigate","createProduct","cancel","ProductCrudComponent","navigateToProductCreate","ProductReadComponent","displayedColumns","read","products","ProductUpdateComponent","route","snapshot","paramMap","get","readById","update","updateProduct","FooterComponent","HeaderComponent","NavComponent","ProductService","snackBar","http","baseApi","api","msg","open","duration","horizontalPosition","verticalPosition","url","post","put","providedIn","ForDirective","container","template","numbers","number","createEmbeddedView","$implicit","RedDirective","el","nativeElement","style","color","materialModules","MaterialModule","HomeComponent","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ProductCreateComponent } from './components/product/product-create/product-create.component';\r\nimport { ProductCrudComponent } from './components/product/product-crud/product-crud.component';\r\nimport { ProductUpdateComponent } from './components/product/product-update/product-update.component';\r\n// import { ProductReadComponent } from './components/product/product-read/product-read.component';\r\nimport { HomeComponent } from './views/home/home.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: HomeComponent,\r\n  },\r\n  {\r\n    path: 'products',\r\n    component: ProductCrudComponent,\r\n  },\r\n  {\r\n    path: 'products/create',\r\n    component: ProductCreateComponent,\r\n  },\r\n  {\r\n    path: 'products/update/:id',\r\n    component: ProductUpdateComponent,\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'frontend';\r\n}\r\n","<app-header></app-header>\r\n<app-nav></app-nav>\r\n<app-footer></app-footer>","// Imports Module\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule, LOCALE_ID } from '@angular/core';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MaterialModule } from './shared/material/material.module';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n// Imports Components\r\nimport { AppComponent } from './app.component';\r\nimport { HeaderComponent } from './components/template/header/header.component';\r\nimport { FooterComponent } from './components/template/footer/footer.component';\r\nimport { NavComponent } from './components/template/nav/nav.component';\r\nimport { HomeComponent } from './views/home/home.component';\r\nimport { ProductCreateComponent } from './components/product/product-create/product-create.component';\r\nimport { ProductCrudComponent } from './components/product/product-crud/product-crud.component';\r\n\r\n// Esses imports são necessários para se trabalhar\r\n// com pipe currency passando um currency expecifico.\r\nimport localePt from '@angular/common/locales/pt';\r\nimport { CommonModule, registerLocaleData } from '@angular/common';\r\n\r\n// Imports Diretivas\r\nimport { RedDirective } from './directives/red.directive';\r\nimport { ForDirective } from './directives/for.directive';\r\nimport { ProductReadComponent } from './components/product/product-read/product-read.component';\r\nimport { ProductUpdateComponent } from './components/product/product-update/product-update.component';\r\n\r\nregisterLocaleData(localePt);\r\n@NgModule({\r\n  /* Todo componente deve ser registrado aqui na lista de declarations do modulo para que ele possa ser utilizado.*/\r\n  declarations: [\r\n    AppComponent,\r\n    RedDirective,\r\n    ForDirective,\r\n    NavComponent,\r\n    HomeComponent,\r\n    HeaderComponent,\r\n    FooterComponent,\r\n    ProductReadComponent,\r\n    ProductCrudComponent,\r\n    ProductCreateComponent,\r\n    ProductUpdateComponent\r\n  ],\r\n  // É Sempre obrigatório declarar o modulo na lista de imports para que possamos ter acesso aos componentes daquele modulo.\r\n  imports: [\r\n    FormsModule,\r\n    CommonModule,\r\n    BrowserModule,\r\n    MaterialModule,\r\n    HttpClientModule,\r\n    AppRoutingModule,\r\n    ReactiveFormsModule,\r\n    BrowserAnimationsModule,\r\n  ],\r\n  // Aqui na lista de providers eu declaro os serviços que serão expostos para fora do modulo\r\n  // de forma que todo o restante da aplicação possa ter acesso a ele.\r\n  providers: [{\r\n    provide: LOCALE_ID,\r\n    useValue: 'pt-BR'\r\n  }],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ProductModel } from 'src/app/shared/models/product.model';\r\nimport { ProductService } from '../../../core/services/product.service';\r\n\r\n@Component({\r\n  selector: 'app-product-create',\r\n  templateUrl: './product-create.component.html',\r\n  styleUrls: ['./product-create.component.css']\r\n})\r\nexport class ProductCreateComponent implements OnInit {\r\n\r\n  product: ProductModel = {\r\n    name: '',\r\n    price: null\r\n  };\r\n\r\n  constructor(\r\n    private productService: ProductService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n  // Aqui ao chamar o serviço e solicitar uma criação,\r\n  // deve-se fazer um subscribe afim receber a resposta a\r\n  // qual o serviço traz do back.\r\n  createProduct(): void {\r\n    this.productService.create(this.product).subscribe(() => {\r\n      this.productService.showMessage('Produto cadastrado com sucesso');\r\n      this.router.navigate(['/products']);\r\n    });\r\n  }\r\n\r\n  cancel(): void {\r\n    this.router.navigate(['/products']);\r\n  }\r\n\r\n}\r\n","<mat-card>\r\n    <mat-card-title>Novo Produto</mat-card-title>\r\n    <form>\r\n        <mat-form-field>\r\n            <input type=\"text\" matInput placeholder=\"Nome\" name=\"name\" id=\"Price\" [(ngModel)]=\"product.name\">\r\n        </mat-form-field>\r\n        <mat-form-field>\r\n            <input type=\"text\" matInput placeholder=\"Preço R$\" name=\"price\" id=\"Price\" [(ngModel)]=\"product.price\">\r\n        </mat-form-field>\r\n    </form>\r\n    <button mat-raised-button (click)=\"createProduct()\" color=\"primary\">Salvar</button>\r\n    <button mat-raised-button (click)=\"cancel()\">Cancelar</button>\r\n</mat-card>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-product-crud',\r\n  templateUrl: './product-crud.component.html',\r\n  styleUrls: ['./product-crud.component.css']\r\n})\r\nexport class ProductCrudComponent implements OnInit {\r\n\r\n  constructor(\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  navigateToProductCreate(): void {\r\n    this.router.navigate(['/products/create']);\r\n  }\r\n}\r\n","<div class=\"container-button\">\r\n  <button mat-raised-button (click)=\"navigateToProductCreate()\">\r\n    Novo Produto\r\n  </button>\r\n</div>\r\n<div class=\"container-table\">\r\n  <app-product-read></app-product-read>\r\n</div>\r\n","import { ProductService } from './../../../core/services/product.service';\r\nimport { ProductModel } from './../../../shared/models/product.model';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-product-read',\r\n  templateUrl: './product-read.component.html',\r\n  styleUrls: ['./product-read.component.css']\r\n})\r\nexport class ProductReadComponent implements OnInit {\r\n\r\n  products: ProductModel[];\r\n  displayedColumns = ['id', 'name', 'price', 'action'];\r\n\r\n  constructor(private productService: ProductService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.productService.read().subscribe(products => {\r\n      this.products = products;\r\n    });\r\n  }\r\n}\r\n","<div class=\"mat-elevation-z4\">\r\n  <table mat-table class=\"full-width-table\" [dataSource]=\"products\">\r\n    <ng-container matColumnDef=\"id\">\r\n      <th mat-header-cell *matHeaderCellDef>Id</th>\r\n      <td mat-cell *matCellDef=\"let row\">{{ row.id }}</td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"name\">\r\n      <th mat-header-cell *matHeaderCellDef>Name</th>\r\n      <td mat-cell *matCellDef=\"let row\">{{ row.name }}</td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"price\">\r\n      <th mat-header-cell *matHeaderCellDef>Price</th>\r\n      <td mat-cell *matCellDef=\"let row\">\r\n        {{ row.price | currency : \"BRL\" : true }}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"action\">\r\n      <th mat-header-cell *matHeaderCellDef>Action</th>\r\n      <td mat-cell *matCellDef=\"let row\">\r\n        <a routerLink=\"update/{{ row.id }}\">\r\n          <i class=\"material-icons\"> edit </i>\r\n        </a>\r\n        <a>\r\n          <i class=\"material-icons\"> delete </i>\r\n        </a>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n  </table>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ProductService } from '../../../core/services/product.service';\r\nimport { ProductModel } from '../../../shared/models/product.model';\r\n\r\n@Component({\r\n  selector: 'app-product-update',\r\n  templateUrl: './product-update.component.html',\r\n  styleUrls: ['./product-update.component.css']\r\n})\r\nexport class ProductUpdateComponent implements OnInit {\r\n\r\n  product: ProductModel = {\r\n    name: '',\r\n    price: null\r\n  };\r\n\r\n  constructor(\r\n    private productService: ProductService,\r\n    private router: Router,\r\n    private route: ActivatedRoute\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    const id = this.route.snapshot.paramMap.get('id');\r\n    this.productService.readById(id).subscribe(product => {\r\n      this.product = product;\r\n    });\r\n\r\n  }\r\n\r\n  // Aqui ao chamar o serviço e solicitar uma criação,\r\n  // deve-se fazer um subscribe afim receber a resposta a\r\n  // qual o serviço traz do back.\r\n  updateProduct(): void {\r\n    this.productService.update(this.product).subscribe(() => {\r\n      this.productService.showMessage('Produto alterado com sucesso');\r\n      this.router.navigate([`/products`]);\r\n    });\r\n  }\r\n\r\n  cancel(): void {\r\n    this.router.navigate(['/products']);\r\n  }\r\n}\r\n","<mat-card>\r\n    <mat-card-title> Produto</mat-card-title>\r\n    <form>\r\n        <mat-form-field>\r\n            <input type=\"text\" matInput placeholder=\"Nome\" name=\"name\" id=\"Price\" [(ngModel)]=\"product.name\">\r\n        </mat-form-field>\r\n        <mat-form-field>\r\n            <input type=\"text\" matInput placeholder=\"Preço R$\" name=\"price\" id=\"Price\" [(ngModel)]=\"product.price\">\r\n        </mat-form-field>\r\n    </form>\r\n    <button mat-raised-button (click)=\"updateProduct()\" color=\"primary\">Atualizar</button>\r\n    <button mat-raised-button (click)=\"cancel()\">Cancelar</button>\r\n</mat-card>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.css']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<mat-toolbar class=\"footer\">\r\n    <span>\r\n        Desenvolvido Com\r\n        <i class=\"material-icons v-middle\" appRed> <!--Aqui foi utilizado uma diretiva de atributo -->\r\n            favorite\r\n        </i>\r\n        Por <strong>Cod <span class=\"red-color\">3</span> r</strong>\r\n    </span>\r\n</mat-toolbar>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css'],\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<section>\r\n    <mat-toolbar class=\"header mat-elevation-z4\">\r\n        <span>\r\n            <a routerLink=\"/\">\r\n                <img class=\"logo\" src=\"assets/logo-200506-094136.jpg\" alt=\"logo\">\r\n            </a>\r\n        </span>\r\n        <span class=\"title-group\">\r\n            <a routerLink=\"/\">\r\n                <i class=\"material-icons\">\r\n                    home\r\n                </i>\r\n                Início\r\n            </a>\r\n        </span>\r\n    </mat-toolbar>\r\n</section>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-nav',\r\n  templateUrl: './nav.component.html',\r\n  styleUrls: ['./nav.component.css']\r\n})\r\nexport class NavComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<mat-sidenav-container class=\"container\">\r\n    <mat-sidenav class=\"sidenav\" mode=\"side\" opened fixedInViewport=true fixedTopGap=\"64\">\r\n        <mat-nav-list class=\"nav-list\">\r\n            <a mat-list-item routerLink=\"\">\r\n                <i class=\"material-icons\">\r\n                    home\r\n                </i> Início\r\n            </a>\r\n            <a mat-list-item routerLink=\"products\">\r\n                <i class=\"material-icons\">\r\n                   storefront\r\n                </i> Produtos\r\n            </a>\r\n        </mat-nav-list>\r\n    </mat-sidenav>\r\n    <mat-sidenav-content class=\"content\">\r\n        <router-outlet></router-outlet>\r\n        <!-- Criado apenas para exemplificar o funcionamento de uma diretiva extrutural -->\r\n        <!-- <ul>\r\n            <li *myFor=\"let n em [1, 2, 3]\">{{n}}</li> \r\n        </ul> -->\r\n    </mat-sidenav-content>\r\n</mat-sidenav-container>","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Observable } from 'rxjs';\r\nimport { ProductModel } from 'src/app/shared/models/product.model';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductService {\r\n\r\n  baseApi = environment.api;\r\n\r\n  constructor(\r\n    private snackBar: MatSnackBar,\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  showMessage(msg: string): void {\r\n    this.snackBar.open(msg, 'X', {\r\n      duration: 3000,\r\n      horizontalPosition: 'right',\r\n      verticalPosition: 'top'\r\n    });\r\n  }\r\n\r\n  // Aqui será feita uma requisição e o serviço observa a\r\n  // solicitação afim de obter uma resposta quando ela\r\n  // chegar para retonar para o componente.\r\n  create(product: ProductModel): Observable<ProductModel> {\r\n    const url = `${this.baseApi}/products`;\r\n    return this.http.post<ProductModel>(url, product);\r\n  }\r\n\r\n  read(): Observable<ProductModel[]> {\r\n    const url = `${this.baseApi}/products`;\r\n    return this.http.get<ProductModel[]>(url);\r\n  }\r\n\r\n  readById(id: string): Observable<ProductModel> {\r\n    const url = `${this.baseApi}/products/${id}`;\r\n    return this.http.get<ProductModel>(url);\r\n  }\r\n\r\n  update(product: ProductModel): Observable<ProductModel> {\r\n    const url = `${this.baseApi}/products/${product.id}`;\r\n    return this.http.put<ProductModel>(url, product);\r\n  }\r\n\r\n  delete(id: string): Observable<ProductModel> {\r\n    const url = `${this.baseApi}/products/${id}`;\r\n    return this.http.delete<ProductModel>(url);\r\n  }\r\n}\r\n","import { Directive, Input, OnInit, TemplateRef, ViewContainerRef } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[myFor]'\r\n})\r\n// Este é um exemplo de diretiva extrutural\r\nexport class ForDirective implements OnInit {\r\n  @Input('myForEm')\r\n  public numbers: number[] = [];\r\n\r\n  // @Input('myForUsando')\r\n  // texto: string = '';\r\n\r\n  constructor(\r\n    private container: ViewContainerRef,\r\n    private template: TemplateRef<any>\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    for (let number of this.numbers) {\r\n      this.container.createEmbeddedView(this.template, { $implicit: number });\r\n    }\r\n  }\r\n\r\n}\r\n","import { Directive, ElementRef } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[appRed]'\r\n})\r\n\r\n// Esse é um exemplo de diretiva de atributo\r\nexport class RedDirective {\r\n\r\n  constructor(private el: ElementRef) {\r\n    el.nativeElement.style.color = '#e35e6b';\r\n   }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatTableModule } from '@angular/material/table';\r\n\r\nconst materialModules = [\r\n  MatToolbarModule,\r\n  MatSidenavModule,\r\n  MatListModule,\r\n  MatCardModule,\r\n  MatCardModule,\r\n  MatButtonModule,\r\n  MatSnackBarModule,\r\n  MatInputModule,\r\n  MatFormFieldModule,\r\n  MatTableModule\r\n]\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    ...materialModules\r\n  ],\r\n  exports: [\r\n    ...materialModules\r\n  ]\r\n})\r\nexport class MaterialModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<mat-card>\r\n    <mat-card-title>Bem Vindo!</mat-card-title>\r\n    <mat-card-subtitle>\r\n        Sistema para exemplificar a construção de um cadastro em Angular\r\n    </mat-card-subtitle>\r\n</mat-card>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  api: 'http://localhost:3000'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}